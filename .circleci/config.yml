version: 2.1
commands:
  build_and_test:
    description: "Shared build steps"
    steps: # a collection of executable commands
      - checkout # special step to check out source code to working directory
      - run:
          name: node-version
          command: node -v && npm -v
      - run:
          name: update-npm
          command: 'sudo npm install -g npm@latest'
      - restore_cache: # special step to restore the dependency cache
          # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: install-npm
          command: npm install
      - save_cache: # special step to save the dependency cache
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - ./node_modules
      - run:
          name: Run tests with JUnit as reporter
          command: ./node_modules/.bin/jest --ci --runInBand --reporters=default --reporters=jest-junit
          environment:
            JEST_JUNIT_OUTPUT: "reports/junit/js-test-results.xml"
            NODE_ENV: "testing"
      - store_test_results:
          path: reports/junit
      - store_artifacts:
          path: reports/junit
jobs: # a collection of steps
  feature_test:
    working_directory: ~/repo # directory where steps will run
    docker: # run the steps with Docker
      - image: circleci/node:9.9 # ...with this image as the primary container; this is where all `steps` will run
    steps:
      - build_and_test
  build: # runs not using Workflows must have a `build` job as entry point
    working_directory: ~/repo # directory where steps will run
    docker: # run the steps with Docker
      - image: circleci/node:9.9 # ...with this image as the primary container; this is where all `steps` will run
    steps:
      - build_and_test
      - run:
          command: |
            git checkout master
            git merge dev
            git push
workflows:
  version: 2
  all:
    jobs:
      - feature_test:
          filters:
            branches:
              ignore:
                - master
                - dev
      - build:
          filters:
            branches:
              only:
                - dev
